{"version":3,"sources":["main.scss","libs/_skel.scss","libs/_vars.scss","libs/_mixins.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["@import 'libs/vars';\n@import 'libs/functions';\n@import 'libs/mixins';\n@import url(\"http://fonts.googleapis.com/css?family=Lato:300,900\");\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.5.0/css/font-awesome.min.css\");\n\n/*\n\tAerial by HTML5 UP\n\thtml5up.net | @n33co\n\tFree for personal and commercial use under the CCA 3.0 license (html5up.net/license)\n*/\n\n\t@import \"libs/skel\";\n\n\t@include skel-breakpoints((\n\t\twide: '(max-width: 1680px)',\n\t\tnormal: '(max-width: 1280px)',\n\t\tmobile: '(max-width: 736px)',\n\t\tmobilep: '(max-width: 480px)'\n\t));\n\n\t@include skel-layout((\n\t\treset: 'full',\n\t\tboxModel: 'border'\n\t));\n\n\t@mixin bg($width) {\n\t\t@include keyframes('bg') {\n\t\t\t0%\t\t{ @include vendor('transform', 'translate3d(0,0,0)'); }\n\t\t\t75%\t{ @include vendor('transform', 'translate3d(#{$width * -1},0,0)'); }\n\t\t}\n\n\t\t#bg {\n\t\t\tbackground-size: $width auto;\n\t\t\twidth: ($width * 3);\n\t\t}\n\t}\n\n\t$delay-wrapper:\t\t\t_duration(wrapper) - 1s;\n\t$delay-overlay:\t\t\t$delay-wrapper - 0.5s;\n\t$delay-header:\t\t\t$delay-overlay + _duration(overlay) - 0.75s;\n\t$delay-nav-icons:\t\t$delay-header + _duration(header) - 1s;\n\t$delay-nav-icon:\t\t0.25s;\n\n/* Basic */\n\n\tbody, input, select, textarea {\n\t\tcolor: _palette(fg);\n\t\tfont-family: 'Lato', sans-serif;\n\t\tfont-size: 15pt;\n\t\tfont-weight: 300 !important;\n\t\tletter-spacing: -0.025em;\n\t\tline-height: 1.75em;\n\t}\n\n\tbody {\n\t\tbackground: _palette(bg);\n\t\toverflow: hidden;\n\n\t\t&.loading{\n\t\t\t* {\n\t\t\t\t@include vendor('animation', 'none !important');\n\t\t\t}\n\t\t}\n\t}\n\n\ta {\n\t\t@include vendor('transition', 'border-color 0.2s ease-in-out');\n\t\tborder-bottom: dotted 1px;\n\t\tcolor: inherit;\n\t\toutline: 0;\n\t\ttext-decoration: none;\n\n\t\t&:hover {\n\t\t\tborder-color: transparent;\n\t\t}\n\t}\n\n/* Icon */\n\n\t.icon {\n\t\t@include icon;\n\t\tposition: relative;\n\n\t\t> .label {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n/* Wrapper */\n\n\t@include keyframes('wrapper') {\n\t\t0%\t\t{ opacity: 0; }\n\t\t100%\t{ opacity: 1; }\n\t}\n\n\t#wrapper {\n\t\t@include vendor('animation', 'wrapper #{_duration(wrapper)} forwards');\n\t\theight: 100%;\n\t\tleft: 0;\n\t\topacity: 0;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t}\n\n/* BG */\n\n\t#bg {\n\t\t@include vendor('animation', 'bg #{_duration(bg)} linear infinite');\n\t\t@include vendor('backface-visibility', 'hidden');\n\t\t@include vendor('transform', 'translate3d(0,0,0)');\n\n\t\t/* Set your background with this */\n\t\tbackground: _misc(bg);\n\n\t\tbackground-repeat: repeat-x;\n\t\theight: 100%;\n\t\tleft: 0;\n\t\topacity: 1;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t}\n\n\t@include bg(_misc(bg-width) * 1.5);\n\n/* Overlay */\n\n\t@include keyframes('overlay') {\n\t\t0%\t\t{ opacity: 0; }\n\t\t100%\t{ opacity: 1; }\n\t}\n\n\t#overlay {\n\t\t@include vendor('animation', 'overlay #{_duration(overlay)} #{$delay-overlay} forwards');\n\t\tbackground-attachment: fixed, fixed;\n\t\tbackground-image: url('/images/overlay-pattern.png'), url('/images/overlay.svg');\n\t\tbackground-position: top left, center center;\n\t\tbackground-repeat: repeat, no-repeat;\n\t\tbackground-size: auto, cover;\n\t\theight: 100%;\n\t\tleft: 0;\n\t\topacity: 0;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t}\n\n/* Main */\n\n\t#main {\n\t\theight: 100%;\n\t\tleft: 0;\n\t\tposition: fixed;\n\t\ttext-align: center;\n\t\ttop: 0;\n\t\twidth: 100%;\n\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tdisplay: inline-block;\n\t\t\theight: 100%;\n\t\t\tmargin-right: 0;\n\t\t\tvertical-align: middle;\n\t\t\twidth: 1px;\n\t\t}\n\t}\n\n/* Header */\n\n\t@include keyframes('header') {\n\t\t0%\t\t{ @include vendor('transform', 'translate3d(0,1em,0)'); opacity: 0; }\n\t\t100%\t{ @include vendor('transform', 'translate3d(0,0,0)'); opacity: 1; }\n\t}\n\n\t@include keyframes('nav-icons') {\n\t\t0%\t\t{ @include vendor('transform', 'translate3d(0,1em,0)'); opacity: 0; }\n\t\t100%\t{ @include vendor('transform', 'translate3d(0,0,0)'); opacity: 1; }\n\t}\n\n\t#header {\n\t\t@include vendor('animation', 'header #{_duration(header)} #{$delay-header} forwards');\n\t\t@include vendor('backface-visibility', 'hidden');\n\t\t@include vendor('transform', 'translate3d(0,0,0)');\n\t\tcursor: default;\n\t\tdisplay: inline-block;\n\t\topacity: 0;\n\t\tposition: relative;\n\t\ttext-align: center;\n\t\ttop: -1em;\n\t\tvertical-align: middle;\n\t\twidth: 90%;\n\n\t\th1 {\n\t\t\tfont-size: 4.35em;\n\t\t\tfont-weight: 900;\n\t\t\tletter-spacing: -0.035em;\n\t\t\tline-height: 1em;\n\t\t}\n\n\t\tp {\n\t\t\tfont-size: 1.50em;\n\t\t\tmargin: 0.75em 0 0.25em 0;\n\t\t\topacity: 0.75;\n\t\t\tfont-weight: 300;\n\t\t}\n\n\t\tnav {\n\t\t\tmargin: 1.5em 0 0 0;\n\n\t\t\tli {\n\t\t\t\t@include vendor('animation', 'nav-icons #{_duration(nav-icons)} ease-in-out forwards');\n\t\t\t\t@include vendor('backface-visibility', 'hidden');\n\t\t\t\t@include vendor('transform', 'translate3d(0,0,0)');\n\t\t\t\tdisplay: inline-block;\n\t\t\t\theight: _size(nav-icon-wrapper);\n\t\t\t\tline-height: _size(nav-icon-wrapper) * 1.1;\n\t\t\t\topacity: 0;\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: _size(nav-icon-wrapper);\n\n\t\t\t\t@for $x from 1 through 10 {\n\t\t\t\t\t&:nth-child(#{$x}) {\n\t\t\t\t\t\t@include vendor('animation-delay', ($delay-nav-icons + ($x * $delay-nav-icon)) + '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\t-webkit-tap-highlight-color: rgba(0,0,0,0);\n\t\t\t\t-webkit-touch-callout: none;\n\t\t\t\tborder: 0;\n\t\t\t\tdisplay: inline-block;\n\n\t\t\t\t&:before {\n\t\t\t\t\t@include vendor('transition', 'all 0.2s ease-in-out');\n\t\t\t\t\tborder-radius: 100%;\n\t\t\t\t\tborder: solid 1px _palette(fg);\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tfont-size: _size(nav-icon);\n\t\t\t\t\theight: 2.5em;\n\t\t\t\t\tline-height: 2.5em;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\twidth: 2.5em;\n\t\t\t\t}\n\n\t\t\t\t&:hover {\n\t\t\t\t\tfont-size: 1.1em;\n\n\t\t\t\t\t&:before {\n\t\t\t\t\t\tbackground-color: _palette(nav-icon, hover-bg);\n\t\t\t\t\t\tcolor: _palette(nav-icon, hover-fg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t&:active {\n\t\t\t\t\tfont-size: 0.95em;\n\t\t\t\t\tbackground: none;\n\n\t\t\t\t\t&:before {\n\t\t\t\t\t\tbackground-color: _palette(nav-icon, active-bg);\n\t\t\t\t\t\tcolor: _palette(nav-icon, active-fg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tspan {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n/* Footer */\n\n\t#footer {\n\t\t@include vendor('background-image', 'linear-gradient(top, rgba(0,0,0,0), rgba(0,0,0,0.5) 75%)');\n\t\tbottom: 0;\n\t\tcursor: default;\n\t\theight: 6em;\n\t\tleft: 0;\n\t\tline-height: 8em;\n\t\tposition: absolute;\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t}\n\n/* Wide */\n\n\t@include breakpoint(wide) {\n\n\t\t/* Basic */\n\n\t\t\tbody, input, select, textarea {\n\t\t\t\tfont-size: 13pt;\n\t\t\t}\n\n\t\t/* BG */\n\n\t\t\t@include bg(_misc(bg-width));\n\n\t}\n\n/* Normal */\n\n\t@include breakpoint(normal) {\n\n\t\t/* Basic */\n\n\t\t\tbody, input, select, textarea {\n\t\t\t\tfont-size: 12pt;\n\t\t\t}\n\n\t\t/* BG */\n\n\t\t\t@include bg(_misc(bg-width) * 0.5);\n\n\t}\n\n/* Mobile */\n\n\t@include breakpoint(mobile) {\n\n\t\t/* Basic */\n\n\t\t\tbody {\n\t\t\t\tmin-width: 320px;\n\t\t\t}\n\n\t\t\tbody, input, select, textarea {\n\t\t\t\tfont-size: 11pt;\n\t\t\t}\n\n\t\t/* BG */\n\n\t\t\t@include bg(_misc(bg-width) * 0.2);\n\n\t\t/* Header */\n\n\t\t\t#header {\n\t\t\t\th1 {\n\t\t\t\t\tfont-size: 2.5em;\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tfont-size: 1em;\n\t\t\t\t}\n\n\t\t\t\tnav {\n\t\t\t\t\tfont-size: 1em;\n\n\t\t\t\t\ta {\n\t\t\t\t\t\t&:hover {\n\t\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t&:active {\n\t\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t}\n\n/* Mobile (Portrait) */\n\n\t@include breakpoint(mobilep) {\n\n\t\t/* BG */\n\n\t\t\t@include bg(_misc(bg-width) * 0.275);\n\n\t\t/* Header */\n\n\t\t\t#header {\n\t\t\t\tnav {\n\t\t\t\t\tpadding: 0 1em;\n\t\t\t\t}\n\t\t\t}\n\n\t}\n","// skel.scss v3.0.0 | (c) n33 | skel.io | MIT licensed */\r\n\r\n// Vars.\r\n\r\n\t/// Breakpoints.\r\n\t/// @var {list}\r\n\t$breakpoints: () !global;\r\n\r\n\t/// Vendor prefixes.\r\n\t/// @var {list}\r\n\t$vendor-prefixes: (\r\n\t\t'-moz-',\r\n\t\t'-webkit-',\r\n\t\t'-ms-',\r\n\t\t''\r\n\t);\r\n\r\n\t/// Properties that should be vendorized.\r\n\t/// @var {list}\r\n\t$vendor-properties: (\r\n\t\t'align-content',\r\n\t\t'align-items',\r\n\t\t'align-self',\r\n\t\t'animation',\r\n\t\t'animation-delay',\r\n\t\t'animation-direction',\r\n\t\t'animation-duration',\r\n\t\t'animation-fill-mode',\r\n\t\t'animation-iteration-count',\r\n\t\t'animation-name',\r\n\t\t'animation-play-state',\r\n\t\t'animation-timing-function',\r\n\t\t'appearance',\r\n\t\t'backface-visibility',\r\n\t\t'box-sizing',\r\n\t\t'filter',\r\n\t\t'flex',\r\n\t\t'flex-basis',\r\n\t\t'flex-direction',\r\n\t\t'flex-flow',\r\n\t\t'flex-grow',\r\n\t\t'flex-shrink',\r\n\t\t'flex-wrap',\r\n\t\t'justify-content',\r\n\t\t'order',\r\n\t\t'perspective',\r\n\t\t'pointer-events',\r\n\t\t'transform',\r\n\t\t'transform-origin',\r\n\t\t'transform-style',\r\n\t\t'transition',\r\n\t\t'transition-delay',\r\n\t\t'transition-duration',\r\n\t\t'transition-property',\r\n\t\t'transition-timing-function'\r\n\t);\r\n\r\n\t/// Values that should be vendorized.\r\n\t/// @var {list}\r\n\t$vendor-values: (\r\n\t\t'filter',\r\n\t\t'flex',\r\n\t\t'linear-gradient',\r\n\t\t'radial-gradient',\r\n\t\t'transform'\r\n\t);\r\n\r\n// Functions.\r\n\r\n\t/// Removes a specific item from a list.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {list} $list List.\r\n\t/// @param {integer} $index Index.\r\n\t/// @return {list} Updated list.\r\n\t@function remove-nth($list, $index) {\r\n\r\n\t\t$result: null;\r\n\r\n\t\t@if type-of($index) != number {\r\n\t\t\t@warn \"$index: #{quote($index)} is not a number for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else if $index == 0 {\r\n\t\t\t@warn \"List index 0 must be a non-zero integer for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else if abs($index) > length($list) {\r\n\t\t\t@warn \"List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else {\r\n\r\n\t\t\t$result: ();\r\n\t\t\t$index: if($index < 0, length($list) + $index + 1, $index);\r\n\r\n\t\t\t@for $i from 1 through length($list) {\r\n\r\n\t\t\t\t@if $i != $index {\r\n\t\t\t\t\t$result: append($result, nth($list, $i));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t@return $result;\r\n\r\n\t}\r\n\r\n\t/// Replaces a substring within another string.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {string} $string String.\r\n\t/// @param {string} $search Substring.\r\n\t/// @param {string} $replace Replacement.\r\n\t/// @return {string} Updated string.\r\n\t@function str-replace($string, $search, $replace: '') {\r\n\r\n\t\t$index: str-index($string, $search);\r\n\r\n\t\t@if $index {\r\n\t\t\t@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n\t\t}\r\n\r\n\t\t@return $string;\r\n\r\n\t}\r\n\r\n\t/// Replaces a substring within each string in a list.\r\n\t/// @param {list} $strings List of strings.\r\n\t/// @param {string} $search Substring.\r\n\t/// @param {string} $replace Replacement.\r\n\t/// @return {list} Updated list of strings.\r\n\t@function str-replace-all($strings, $search, $replace: '') {\r\n\r\n\t\t@each $string in $strings {\r\n\t\t\t$strings: set-nth($strings, index($strings, $string), str-replace($string, $search, $replace));\r\n\t\t}\r\n\r\n\t\t@return $strings;\r\n\r\n\t}\r\n\r\n\t/// Gets a value from a map.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {map} $map Map.\r\n\t/// @param {string} $keys Key(s).\r\n\t/// @return {string} Value.\r\n\t@function val($map, $keys...) {\r\n\r\n\t\t@if nth($keys, 1) == null {\r\n\t\t\t$keys: remove-nth($keys, 1);\r\n\t\t}\r\n\r\n\t\t@each $key in $keys {\r\n\t\t\t$map: map-get($map, $key);\r\n\t\t}\r\n\r\n\t\t@return $map;\r\n\r\n\t}\r\n\r\n// Mixins.\r\n\r\n\t/// Sets the global box model.\r\n\t/// @param {string} $model Model (default is content).\r\n\t@mixin boxModel($model: 'content') {\r\n\r\n\t\t$x: $model + '-box';\r\n\r\n\t\t*, *:before, *:after {\r\n\t\t\t-moz-box-sizing: #{$x};\r\n\t\t\t-webkit-box-sizing: #{$x};\r\n\t\t\tbox-sizing: #{$x};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in a @media block using a given breakpoint.\r\n\t/// @param {string} $breakpoint Breakpoint.\r\n\t/// @param {map} $queries Additional queries.\r\n\t@mixin breakpoint($breakpoint: null, $queries: null) {\r\n\r\n\t\t$query: 'screen';\r\n\r\n\t\t// Breakpoint.\r\n\t\t\t@if $breakpoint and map-has-key($breakpoints, $breakpoint) {\r\n\t\t\t\t$query: $query + ' and ' + map-get($breakpoints, $breakpoint);\r\n\t\t\t}\r\n\r\n\t\t// Queries.\r\n\t\t\t@if $queries {\r\n\t\t\t\t@each $k, $v in $queries {\r\n\t\t\t\t\t$query: $query + ' and (' + $k + ':' + $v + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n        @media #{$query} {\r\n            @content;\r\n        }\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in a @media block targeting a specific orientation.\r\n\t/// @param {string} $orientation Orientation.\r\n\t@mixin orientation($orientation) {\r\n\t\t@media screen and (orientation: #{$orientation}) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t/// Utility mixin for containers.\r\n\t/// @param {mixed} $width Width.\r\n\t@mixin containers($width) {\r\n\r\n\t\t// Locked?\r\n\t\t\t$lock: false;\r\n\r\n\t\t\t@if length($width) == 2 {\r\n\t\t\t\t$width: nth($width, 1);\r\n\t\t\t\t$lock: true;\r\n\t\t\t}\r\n\r\n\t\t// Modifiers.\r\n\t\t\t.container.\\31 25\\25\t\t{ width: 100%; max-width: $width * 1.25; min-width: $width; }\r\n\t\t\t.container.\\37 5\\25\t\t\t{ width: $width * 0.75; }\r\n\t\t\t.container.\\35 0\\25\t\t\t{ width: $width * 0.5; }\r\n\t\t\t.container.\\32 5\\25\t\t\t{ width: $width * 0.25; }\r\n\r\n\t\t// Main class.\r\n\t\t\t.container {\r\n\t\t\t\t@if $lock {\r\n\t\t\t\t\twidth: $width !important;\r\n\t\t\t\t}\r\n\t\t\t\t@else {\r\n\t\t\t\t\twidth: $width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\t/// Utility mixin for grid.\r\n\t/// @param {list} $gutters Column and row gutters (default is 40px).\r\n\t/// @param {string} $breakpointName Optional breakpoint name.\r\n\t@mixin grid($gutters: 40px, $breakpointName: null) {\r\n\r\n\t\t// Gutters.\r\n\t\t\t@include grid-gutters($gutters);\r\n\t\t\t@include grid-gutters($gutters, \\32 00\\25, 2);\r\n\t\t\t@include grid-gutters($gutters, \\31 50\\25, 1.5);\r\n\t\t\t@include grid-gutters($gutters, \\35 0\\25, 0.5);\r\n\t\t\t@include grid-gutters($gutters, \\32 5\\25, 0.25);\r\n\r\n\t\t// Cells.\r\n\t\t\t$x: '';\r\n\r\n\t\t\t@if $breakpointName {\r\n\t\t\t\t$x: '\\\\28' + $breakpointName + '\\\\29';\r\n\t\t\t}\r\n\r\n\t\t\t.\\31 2u#{$x}, .\\31 2u\\24#{$x} { width: 100%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 1u#{$x}, .\\31 1u\\24#{$x} { width: 91.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 0u#{$x}, .\\31 0u\\24#{$x} { width: 83.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\39 u#{$x}, .\\39 u\\24#{$x} { width: 75%; clear: none; margin-left: 0; }\r\n\t\t\t.\\38 u#{$x}, .\\38 u\\24#{$x} { width: 66.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\37 u#{$x}, .\\37 u\\24#{$x} { width: 58.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\36 u#{$x}, .\\36 u\\24#{$x} { width: 50%; clear: none; margin-left: 0; }\r\n\t\t\t.\\35 u#{$x}, .\\35 u\\24#{$x} { width: 41.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\34 u#{$x}, .\\34 u\\24#{$x} { width: 33.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\33 u#{$x}, .\\33 u\\24#{$x} { width: 25%; clear: none; margin-left: 0; }\r\n\t\t\t.\\32 u#{$x}, .\\32 u\\24#{$x} { width: 16.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 u#{$x}, .\\31 u\\24#{$x} { width: 8.3333333333%; clear: none; margin-left: 0; }\r\n\r\n\t\t\t.\\31 2u\\24#{$x} + *,\r\n\t\t\t.\\31 1u\\24#{$x} + *,\r\n\t\t\t.\\31 0u\\24#{$x} + *,\r\n\t\t\t.\\39 u\\24#{$x} + *,\r\n\t\t\t.\\38 u\\24#{$x} + *,\r\n\t\t\t.\\37 u\\24#{$x} + *,\r\n\t\t\t.\\36 u\\24#{$x} + *,\r\n\t\t\t.\\35 u\\24#{$x} + *,\r\n\t\t\t.\\34 u\\24#{$x} + *,\r\n\t\t\t.\\33 u\\24#{$x} + *,\r\n\t\t\t.\\32 u\\24#{$x} + *,\r\n\t\t\t.\\31 u\\24#{$x} + * {\r\n\t\t\t\tclear: left;\r\n\t\t\t}\r\n\r\n\t\t\t.\\-11u#{$x} { margin-left: 91.6666666667% }\r\n\t\t\t.\\-10u#{$x} { margin-left: 83.3333333333% }\r\n\t\t\t.\\-9u#{$x} { margin-left: 75% }\r\n\t\t\t.\\-8u#{$x} { margin-left: 66.6666666667% }\r\n\t\t\t.\\-7u#{$x} { margin-left: 58.3333333333% }\r\n\t\t\t.\\-6u#{$x} { margin-left: 50% }\r\n\t\t\t.\\-5u#{$x} { margin-left: 41.6666666667% }\r\n\t\t\t.\\-4u#{$x} { margin-left: 33.3333333333% }\r\n\t\t\t.\\-3u#{$x} { margin-left: 25% }\r\n\t\t\t.\\-2u#{$x} { margin-left: 16.6666666667% }\r\n\t\t\t.\\-1u#{$x} { margin-left: 8.3333333333% }\r\n\r\n\t}\r\n\r\n\t/// Utility mixin for grid.\r\n\t/// @param {list} $gutters Gutters.\r\n\t/// @param {string} $class Optional class name.\r\n\t/// @param {integer} $multiplier Multiplier (default is 1).\r\n\t@mixin grid-gutters($gutters, $class: null, $multiplier: 1) {\r\n\r\n\t\t// Expand gutters if it's not a list.\r\n\t\t\t@if length($gutters) == 1 {\r\n\t\t\t\t$gutters: ($gutters, 0);\r\n\t\t\t}\r\n\r\n\t\t// Get column and row gutter values.\r\n\t\t\t$c: nth($gutters, 1);\r\n\t\t\t$r: nth($gutters, 2);\r\n\r\n\t\t// Get class (if provided).\r\n\t\t\t$x: '';\r\n\r\n\t\t\t@if $class {\r\n\t\t\t\t$x: '.' + $class;\r\n\t\t\t}\r\n\r\n\t\t// Default.\r\n\t\t\t.row#{$x} > * { padding: ($r * $multiplier) 0 0 ($c * $multiplier); }\r\n\t\t\t.row#{$x} { margin: ($r * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\r\n\r\n\t\t// Uniform.\r\n\t\t\t.row.uniform#{$x} > * { padding: ($c * $multiplier) 0 0 ($c * $multiplier); }\r\n\t\t\t.row.uniform#{$x} { margin: ($c * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in vendorized keyframe blocks.\r\n\t/// @param {string} $name Name.\r\n\t@mixin keyframes($name) {\r\n\r\n\t\t@-moz-keyframes #{$name} { @content; }\r\n\t\t@-webkit-keyframes #{$name} { @content; }\r\n\t\t@-ms-keyframes #{$name} { @content; }\r\n\t\t@keyframes #{$name} { @content; }\r\n\r\n\t}\r\n\r\n\t///\r\n\t/// Sets breakpoints.\r\n\t/// @param {map} $x Breakpoints.\r\n\t///\r\n\t@mixin skel-breakpoints($x: ()) {\r\n\t\t$breakpoints: $x !global;\r\n\t}\r\n\r\n\t///\r\n\t/// Initializes layout module.\r\n\t/// @param {map} config Config.\r\n\t///\r\n\t@mixin skel-layout($config: ()) {\r\n\r\n\t\t// Config.\r\n\t\t\t$configPerBreakpoint: ();\r\n\r\n\t\t\t$z: map-get($config, 'breakpoints');\r\n\r\n\t\t\t@if $z {\r\n\t\t\t\t$configPerBreakpoint: $z;\r\n\t\t\t}\r\n\r\n\t\t// Reset.\r\n\t\t\t$x: map-get($config, 'reset');\r\n\r\n\t\t\t@if $x {\r\n\r\n\t\t\t\t/* Reset */\r\n\r\n\t\t\t\t@include reset($x);\r\n\r\n\t\t\t}\r\n\r\n\t\t// Box model.\r\n\t\t\t$x: map-get($config, 'boxModel');\r\n\r\n\t\t\t@if $x {\r\n\r\n\t\t\t\t/* Box Model */\r\n\r\n\t\t\t\t@include boxModel($x);\r\n\r\n\t\t\t}\r\n\r\n\t\t// Containers.\r\n\t\t\t$containers: map-get($config, 'containers');\r\n\r\n\t\t\t@if $containers {\r\n\r\n\t\t\t\t/* Containers */\r\n\r\n\t\t\t\t.container {\r\n\t\t\t\t\tmargin-left: auto;\r\n\t\t\t\t\tmargin-right: auto;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Use default is $containers is just \"true\".\r\n\t\t\t\t\t@if $containers == true {\r\n\t\t\t\t\t\t$containers: 960px;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Apply base.\r\n\t\t\t\t\t@include containers($containers);\r\n\r\n\t\t\t\t// Apply per-breakpoint.\r\n\t\t\t\t\t@each $name in map-keys($breakpoints) {\r\n\r\n\t\t\t\t\t\t// Get/use breakpoint setting if it exists.\r\n\t\t\t\t\t\t\t$x: map-get($configPerBreakpoint, $name);\r\n\r\n\t\t\t\t\t\t\t// Per-breakpoint config exists?\r\n\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t$y: map-get($x, 'containers');\r\n\r\n\t\t\t\t\t\t\t\t\t// Setting exists? Use it.\r\n\t\t\t\t\t\t\t\t\t\t@if $y {\r\n\t\t\t\t\t\t\t\t\t\t\t$containers: $y;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Create @media block.\r\n\t\t\t\t\t\t\t@media screen and #{map-get($breakpoints, $name)} {\r\n\t\t\t\t\t\t\t\t@include containers($containers);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t// Grid.\r\n\t\t\t$grid: map-get($config, 'grid');\r\n\r\n\t\t\t@if $grid {\r\n\r\n\t\t\t\t/* Grid */\r\n\r\n\t\t\t\t// Use defaults if $grid is just \"true\".\r\n\t\t\t\t\t@if $grid == true {\r\n\t\t\t\t\t\t$grid: ();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Sub-setting: Gutters.\r\n\t\t\t\t\t$grid-gutters: 40px;\r\n\t\t\t\t\t$x: map-get($grid, 'gutters');\r\n\r\n\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t$grid-gutters: $x;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Rows.\r\n\t\t\t\t\t.row {\r\n\t\t\t\t\t\tborder-bottom: solid 1px transparent;\r\n\t\t\t\t\t\t-moz-box-sizing: border-box;\r\n\t\t\t\t\t\t-webkit-box-sizing: border-box;\r\n\t\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row > * {\r\n\t\t\t\t\t\tfloat: left;\r\n\t\t\t\t\t\t-moz-box-sizing: border-box;\r\n\t\t\t\t\t\t-webkit-box-sizing: border-box;\r\n\t\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row:after, .row:before {\r\n\t\t\t\t\t\tcontent: '';\r\n\t\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t\tclear: both;\r\n\t\t\t\t\t\theight: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row.uniform > * > :first-child {\r\n\t\t\t\t\t\tmargin-top: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row.uniform > * > :last-child {\r\n\t\t\t\t\t\tmargin-bottom: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Gutters (0%).\r\n\t\t\t\t\t@include grid-gutters($grid-gutters, \\30 \\25, 0);\r\n\r\n\t\t\t\t// Apply base.\r\n\t\t\t\t\t@include grid($grid-gutters);\r\n\r\n\t\t\t\t// Apply per-breakpoint.\r\n\t\t\t\t\t@each $name in map-keys($breakpoints) {\r\n\r\n\t\t\t\t\t\t// Get/use breakpoint setting if it exists.\r\n\t\t\t\t\t\t\t$x: map-get($configPerBreakpoint, $name);\r\n\r\n\t\t\t\t\t\t\t// Per-breakpoint config exists?\r\n\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t$y: map-get($x, 'grid');\r\n\r\n\t\t\t\t\t\t\t\t\t// Setting exists?\r\n\t\t\t\t\t\t\t\t\t\t@if $y {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Sub-setting: Gutters.\r\n\t\t\t\t\t\t\t\t\t\t\t\t$x: map-get($y, 'gutters');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$grid-gutters: $x;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Create @media block.\r\n\t\t\t\t\t\t\t@media screen and #{map-get($breakpoints, $name)} {\r\n\t\t\t\t\t\t\t\t@include grid($grid-gutters, $name);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\t/// Resets browser styles.\r\n\t/// @param {string} $mode Mode (default is 'normalize').\r\n\t@mixin reset($mode: 'normalize') {\r\n\r\n\t\t@if $mode == 'normalize' {\r\n\r\n\t\t\t// normalize.css v3.0.2 | MIT License | git.io/normalize\r\n\t\t\t\thtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\r\n\r\n\t\t}\r\n\t\t@else if $mode == 'full' {\r\n\r\n\t\t\t// meyerweb.com/eric/tools/css/reset v2.0 | 20110126 | License: none (public domain)\r\n\t\t\t\thtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block;}body{line-height:1;}ol,ul{list-style:none;}blockquote,q{quotes:none;}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none;}table{border-collapse:collapse;border-spacing:0;}body{-webkit-text-size-adjust:none}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/// Vendorizes a declaration's property and/or value(s).\r\n\t/// @param {string} $property Property.\r\n\t/// @param {mixed} $value String/list of value(s).\r\n\t@mixin vendor($property, $value) {\r\n\r\n\t\t// Determine if property should expand.\r\n\t\t\t$expandProperty: index($vendor-properties, $property);\r\n\r\n\t\t// Determine if value should expand (and if so, add '-prefix-' placeholder).\r\n\t\t\t$expandValue: false;\r\n\r\n\t\t\t@each $x in $value {\r\n\t\t\t\t@each $y in $vendor-values {\r\n\t\t\t\t\t@if $y == str-slice($x, 1, str-length($y)) {\r\n\r\n\t\t\t\t\t\t$value: set-nth($value, index($value, $x), '-prefix-' + $x);\r\n\t\t\t\t\t\t$expandValue: true;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Expand property?\r\n\t\t\t@if $expandProperty {\r\n\t\t\t    @each $vendor in $vendor-prefixes {\r\n\t\t\t        #{$vendor}#{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\r\n\t\t\t    }\r\n\t\t\t}\r\n\r\n\t\t// Expand just the value?\r\n\t\t\t@elseif $expandValue {\r\n\t\t\t    @each $vendor in $vendor-prefixes {\r\n\t\t\t        #{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\r\n\t\t\t    }\r\n\t\t\t}\r\n\r\n\t\t// Neither? Treat them as a normal declaration.\r\n\t\t\t@else {\r\n\t\t        #{$property}: #{$value};\r\n\t\t\t}\r\n\r\n\t}","// Misc.\n\t$misc: (\n\t\tbg:\t\t\t\t\t#348cb2 url(\"/images/bg/winter-trees.jpg\") bottom left,\n\t\tbg-width:\t\t\t7700px\n\t);\n\n// Duration.\n\t$duration: (\n\t\tbg:\t\t\t\t\t60s,\n\t\twrapper:\t\t\t3s,\n\t\toverlay:\t\t\t1.5s,\n\t\theader:\t\t\t\t1s,\n\t\tnav-icons:\t\t\t0.5s\n\t);\n\n// Size.\n\t$size: (\n\t\tnav-icon-wrapper:\t5.35em,\n\t\tnav-icon:\t\t\t1.75em\n\t);\n\n// Font.\n\t$font: (\n\t);\n\n// Palette.\n\t$palette: (\n\t\tbg:\t\t\t\t\t#fff,\n\t\tfg:\t\t\t\t\t#fff,\n\n\t\tnav-icon: (\n\t\t\thover-bg:\t\trgba(255,255,255,0.175),\n\t\t\thover-fg:\t\t#fff,\n\t\t\tactive-bg:\t\trgba(255,255,255,0.35),\n\t\t\tactive-fg:\t\t#fff\n\t\t)\n\t);\n","/// Makes an element's :before pseudoelement a FontAwesome icon.\r\n/// @param {string} $content Optional content value to use.\r\n@mixin icon($content: false) {\r\n\r\n\ttext-decoration: none;\r\n\r\n\t&:before {\r\n\r\n\t\t@if $content {\r\n\t\t\tcontent: $content;\r\n\t\t}\r\n\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\tfont-family: FontAwesome;\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: normal;\r\n\t\ttext-transform: none !important;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/// Applies padding to an element, taking the current element-margin value into account.\r\n/// @param {mixed} $tb Top/bottom padding.\r\n/// @param {mixed} $lr Left/right padding.\r\n/// @param {list} $pad Optional extra padding (in the following order top, right, bottom, left)\r\n/// @param {bool} $important If true, adds !important.\r\n@mixin padding($tb, $lr, $pad: (0,0,0,0), $important: null) {\r\n\r\n\t@if $important {\r\n\t\t$important: '!important';\r\n\t}\r\n\r\n\tpadding: ($tb + nth($pad,1)) ($lr + nth($pad,2)) max(0.1em, $tb - _size(element-margin) + nth($pad,3)) ($lr + nth($pad,4)) #{$important};\r\n\r\n}"],"sourceRoot":"/source/"}